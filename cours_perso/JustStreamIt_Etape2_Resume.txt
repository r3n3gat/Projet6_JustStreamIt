
===============================
✅ ÉTAPE 2 – Analyser les réponses de l’API avec Postman
===============================

🎯 Objectif :
-------------
Comprendre précisément la structure des données envoyées par l’API OCMovies, afin de savoir comment les utiliser dans le front-end HTML/CSS/JS du projet JustStreamIt.

---

📦 Requêtes à analyser :
-------------------------

| Type de requête     | URL                                           | Objectif                                 |
|---------------------|-----------------------------------------------|------------------------------------------|
| ✅ Liste des films  | GET http://127.0.0.1:8000/api/v1/titles/      | Récupérer un tableau de films paginés   |
| ✅ Détail d’un film | GET http://127.0.0.1:8000/api/v1/titles/9     | Voir les champs complets d’un film       |
| ✅ Liste des genres | GET http://127.0.0.1:8000/api/v1/genres/      | Récupérer les catégories disponibles     |

---

🧰 Outil utilisé : POSTMAN
---------------------------

Pourquoi utiliser Postman ?
- Permet de tester visuellement les requêtes HTTP GET
- Facile à utiliser pour analyser les réponses JSON
- Pas besoin de coder pour comprendre la structure de l’API

Étapes :
1. Ouvrir Postman
2. Créer une requête `GET`
3. Coller l’URL (ex: http://127.0.0.1:8000/api/v1/titles/)
4. Cliquer sur “Send” pour exécuter
5. Lire et analyser le contenu JSON de la réponse

---

🔍 Détail de chaque requête
---------------------------

1. ✅ Liste des films – `/api/v1/titles/`

- Méthode : GET
- Réponse contient :
  - `count` : nombre total de films
  - `next` / `previous` : pagination
  - `results[]` : tableau de films
- Pour chaque film :
  - `id`, `title`, `year`, `genres`, `imdb_score`, `image_url`, etc.
- 💡 Ces données alimenteront les **carrousels** sur la page d’accueil

---

2. ✅ Détail d’un film – `/api/v1/titles/<id>`

- Exemple : `/api/v1/titles/9`
- Réponse complète contenant :
  - `title`, `year`, `description`, `directors`, `actors`, `votes`, `genres`, etc.
- 💡 Ces données permettent d'afficher la **fiche détaillée (modale)** lors d’un clic

---

3. ✅ Liste des genres – `/api/v1/genres/`

- Méthode : GET
- Retourne :
  - `count`
  - `results[]` avec des objets : `{ "id": x, "name": "Genre" }`
- 💡 À utiliser pour créer des **catégories de films** (carrousels par genre)

---

📌 Résumé de ce que tu dois retenir :
-------------------------------------

| Objectif                   | Données récupérées                     | Utilisation dans le site |
|----------------------------|----------------------------------------|---------------------------|
| Afficher les meilleurs films | `results[]` de `/titles/`              | Carrousel d’accueil       |
| Afficher un film en détail | objet de `/titles/<id>/`               | Fiche modale              |
| Afficher des catégories    | `results[]` de `/genres/`              | Titres des carrousels     |

---

🧠 Compétences acquises :
--------------------------

- Lire une API REST avec pagination
- Savoir identifier les données utiles pour l’interface
- Utiliser Postman pour faire des tests rapides
- Comprendre la logique des URLs d’API et des méthodes HTTP
- Lire et exploiter une réponse JSON

---

✅ Tu es prêt pour l’étape 3 : Créer la première page HTML !
